{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","src","alt","className","styles","descriptionBlock","photos","large","Preloader","Post","item","message","likesCount","MyPosts","React","memo","posts","profilePage","map","p","postsBlock","AddPostReduxForm","onSubmit","newPost","addPost","newPostText","maxLength10","maxLength","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","requiredField","placeholder","MyPostsContainer","connect","state","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","updateUserStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.8dc282c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Nwj8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__mRWPf\",\"posts\":\"MyPosts_posts__2anfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__mKyuP\"};","import React, { useEffect, useState } from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n  useEffect(() => setStatus(props.status), [props.status])\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || '-------'}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileStatusWithHooks\r\n","import React from 'react'\r\nimport Preloader from '../../../common/Preloader/Preloader'\r\nimport styles from './ProfileInfo.module.css'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img\r\n          src='https://img5.goodfon.ru/wallpaper/nbig/5/df/osen-nebo-listia-colorful-iaponiia-japan-red-klen-gora-fudzh.jpg'\r\n          alt=''\r\n        ></img>\r\n      </div>\r\n      <div className={styles.descriptionBlock}>\r\n        <img src={profile.photos.large} alt='' />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo\r\n","import React from 'react'\r\nimport styles from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.item}>\r\n      <img\r\n        src='https://i.pinimg.com/originals/8b/6e/c6/8b6ec60427f9b17c1d9aaf4c415babe3.png'\r\n        alt=''\r\n      />\r\n      {props.message}\r\n      <div>\r\n        <span>like {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls'\r\nimport { maxLength, requiredField } from '../../../utils/validators/validators'\r\nimport styles from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  let posts = props.profilePage.posts.map((p) => (\r\n    <Post message={p.message} likesCount={p.likesCount} />\r\n  ))\r\n\r\n  let onAddPost = (newPost) => {\r\n    props.addPost(newPost.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.postsBlock}>\r\n      My posts\r\n      <AddPostReduxForm onSubmit={onAddPost} />\r\n      <div className={styles.posts}>{posts}</div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst maxLength10 = maxLength(10)\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field\r\n            component={Textarea}\r\n            name='newPostText'\r\n            validate={[requiredField, maxLength10]}\r\n            placeholder='Post message'\r\n          />\r\n        </div>\r\n        <div>\r\n          <button>Add Post</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n  form: 'profileAddPostForm'\r\n})(AddPostForm)\r\n\r\nexport default MyPosts\r\n","import { connect } from 'react-redux'\r\nimport { addPostActionCreator } from '../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts'\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPost) => {\r\n      dispatch(addPostActionCreator(newPost))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import React from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Profile from './Profile'\r\nimport {\r\n  getUserProfile,\r\n  getUserStatus,\r\n  updateUserStatus\r\n} from '../../redux/profileReducer'\r\nimport { withRouter } from 'react-router'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId)\r\n    this.props.getUserStatus(userId)\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateUserStatus}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus }),\r\n  withRouter\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}