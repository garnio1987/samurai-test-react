{"version":3,"sources":["redux/dialogsReducer.js","components/Users/Users.module.css","api/api.js","components/Navbar/Navbar.module.css","reportWebVitals.js","components/Navbar/Navbar.jsx","common/paginator/Paginator.jsx","assets/images/user.png","components/Users/User.jsx","components/Users/Users.jsx","utils/object-helpers.js","redux/usersReducer.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","App.js","index.js","common/FormsControls/FormsControls.js","common/FormsControls/FormsControls.module.css","assets/images/Spinner.svg","common/Preloader/Preloader.js","common/paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profileReducer.js"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","addMessageCreator","newMessage","type","dialogsReducer","state","action","module","exports","instance","axios","create","withCredentials","baseURL","headers","UsersAPI","getUsers","currentPage","pageSize","get","then","response","data","followUser","post","unfollowUser","delete","getUser","console","warn","ProfileAPI","getStatus","userId","updateStatus","status","put","AuthAPI","auth","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","styles","nav","item","to","activeClassName","activeLink","Paginator","totalUsersCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","useEffect","paginator","onClick","filter","p","map","selectedPage","pageNumber","User","user","followingInProgress","follow","unfollow","src","photos","small","userPhoto","alt","followed","disabled","some","Users","users","u","updateObjectInArray","items","itemId","objPropName","newObjProps","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USER_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","isFetching","followAccess","unfollowAccess","setCurrentPage","page","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","userCount","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","props","requestUsers","this","Preloader","React","Component","connect","bind","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","requiredField","formErrorWrapper","formSummaryError","length","stopSubmit","_error","formData","SET_INITIALIZED","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","DialogsContainer","lazy","ProfileContainer","App","getInitialized","fallback","path","render","AppContainer","compose","withRouter","FullApp","ReactDOM","document","getElementById","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","placeholder","component","validators","text","validate","width","height","preloader","value","maxLength","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","DELETE_POST","posts","likesCount","profile","addPostActionCreator","newPost","setUserStatus","getUserProfile","getUserStatus","updateUserStatus"],"mappings":"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","file":"static/js/main.7f0be2b3.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Oleg' },\r\n        { id: 2, name: 'Tanya' },\r\n        { id: 3, name: 'Egor' },\r\n        { id: 4, name: 'Mary' },\r\n        { id: 5, name: 'Kostya' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hello' },\r\n        { id: 2, message: 'How are you?' },\r\n        { id: 3, message: 'HI' },\r\n        { id: 4, message: 'I am fine' },\r\n        { id: 5, message: 'Yo' }\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: action.newMessage }],\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageCreator = (newMessage) => ({ type: SEND_MESSAGE, newMessage })\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__wtb4F\",\"selectedPage\":\"Users_selectedPage__1RPzF\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": 'fd69a4ff-ee08-4944-9786-7f2ed6d43576'\r\n    }\r\n})\r\n\r\nexport const UsersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    followUser(id) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n    unfollowUser(id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    getUser(id) {\r\n        console.warn('Obsolete method. Please use ProfileAPI object');\r\n        return ProfileAPI.getUser(id);\r\n    }\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    getUser(id) {\r\n        return instance.get(`profile/${id}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', { status })\r\n    }\r\n}\r\n\r\nexport const AuthAPI = {\r\n    auth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__C-uM0\",\"item\":\"Navbar_item__3HqmT\",\"activeLink\":\"Navbar_activeLink__1dXwh\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <div className={styles.item}>\r\n        <NavLink to='/profile' activeClassName={styles.activeLink}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to='/dialogs' activeClassName={styles.activeLink}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to='/users' activeClassName={styles.activeLink}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to='/news' activeClassName={styles.activeLink}>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to='/music' activeClassName={styles.activeLink}>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to='/settings' activeClassName={styles.activeLink}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport styles from './Paginator.module.css'\r\n\r\nconst Paginator = ({\r\n  totalUsersCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChanged,\r\n  portionSize = 10\r\n}) => {\r\n  let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n  let pages = []\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize)\r\n  let [portionNumber, setPortionNumber] = useState(1)\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n  let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n  const setPrevPortionNumber = () => {\r\n    setPortionNumber(portionNumber - 1)\r\n  }\r\n\r\n  const setNextPortionNumber = () => {\r\n    setPortionNumber(portionNumber + 1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPortionNumber(Math.ceil(currentPage / portionSize))\r\n  }, [currentPage])\r\n\r\n  return (\r\n    <div className={styles.paginator}>\r\n      {portionNumber > 1 && (\r\n        <button onClick={setPrevPortionNumber}>Prev</button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\r\n        )\r\n        .map((p) => {\r\n          return (\r\n            <span\r\n              className={\r\n                currentPage === p ? styles.selectedPage : styles.pageNumber\r\n              }\r\n              key={p}\r\n              onClick={() => onPageChanged(p)}\r\n            >\r\n              {p}\r\n            </span>\r\n          )\r\n        })}\r\n      {portionNumber < portionCount && (\r\n        <button onClick={setNextPortionNumber}>Next</button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Paginator\r\n","export default __webpack_public_path__ + \"static/media/user.6c53c0a1.png\";","import React from 'react'\r\nimport styles from './Users.module.css'\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst User = ({ user, followingInProgress, follow, unfollow }) => {\r\n  return (\r\n    <div>\r\n      <span>\r\n        <div>\r\n          <NavLink to={'/profile/' + user.id}>\r\n            <img\r\n              src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n              alt=''\r\n              className={styles.userPhoto}\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {user.followed ? (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => unfollow(user.id)}\r\n            >\r\n              Unfollow\r\n            </button>\r\n          ) : (\r\n            <button\r\n              disabled={followingInProgress.some((id) => id === user.id)}\r\n              onClick={() => follow(user.id)}\r\n            >\r\n              Follow\r\n            </button>\r\n          )}\r\n        </div>\r\n      </span>\r\n      <span>\r\n        <span>\r\n          <div>{user.name}</div>\r\n          <div>{user.status}</div>\r\n        </span>\r\n        <span>\r\n          <div>{'user.country'}</div>\r\n          <div>{'user.city'}</div>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default User\r\n","import React from 'react'\r\nimport Paginator from '../../common/paginator/Paginator'\r\nimport User from './User'\r\n\r\nconst Users = ({\r\n  currentPage,\r\n  pageSize,\r\n  totalUsersCount,\r\n  onPageChanged,\r\n  users,\r\n  followingInProgress,\r\n  follow,\r\n  unfollow,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div>\r\n      <Paginator\r\n        currentPage={currentPage}\r\n        pageSize={pageSize}\r\n        totalUsersCount={totalUsersCount}\r\n        onPageChanged={onPageChanged}\r\n      />\r\n      {users.map((u) => (\r\n        <User\r\n          key={u.id}\r\n          user={u}\r\n          followingInProgress={followingInProgress}\r\n          follow={follow}\r\n          unfollow={unfollow}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u\r\n    })\r\n}\r\n\r\n","import { UsersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USER_COUNT = 'SET-TOTAL-USER-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (FOLLOW): {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\r\n            }\r\n        }\r\n        case (UNFOLLOW): {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\r\n            }\r\n        }\r\n        case (SET_USERS): {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case (SET_CURRENT_PAGE): {\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n        }\r\n        case (SET_TOTAL_USER_COUNT): {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.userCount\r\n            }\r\n        }\r\n        case (TOGGLE_IS_FETCHING): {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case (TOGGLE_IS_FOLLOWING_PROGRESS): {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst followAccess = (userId) => ({ type: FOLLOW, userId })\r\nconst unfollowAccess = (userId) => ({ type: UNFOLLOW, userId })\r\nconst setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (page) => ({ type: SET_CURRENT_PAGE, page })\r\nconst setTotalUsersCount = (userCount) => ({ type: SET_TOTAL_USER_COUNT, userCount })\r\nconst toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nconst toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n\r\n    const data = await UsersAPI.getUsers(page, pageSize);\r\n\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n    dispatch(toggleIsFetching(false));\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, UsersAPI.followUser.bind(UsersAPI), followAccess);\r\n}\r\n\r\nexport const unfollow = (userId) => (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, UsersAPI.unfollowUser.bind(UsersAPI), unfollowAccess);\r\n}\r\n\r\nexport default usersReducer","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Users from './Users'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport { follow, unfollow, requestUsers } from '../../redux/usersReducer'\r\nimport {\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsers\r\n} from '../../redux/users-selectors'\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    const { currentPage, pageSize } = this.props\r\n    this.props.requestUsers(currentPage, pageSize)\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    const { pageSize } = this.props\r\n    this.props.requestUsers(pageNumber, pageSize)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          onPageChanged={this.onPageChanged}\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          users={this.props.users}\r\n          unfollow={this.props.unfollow}\r\n          follow={this.props.follow}\r\n          followingInProgress={this.props.followingInProgress}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  follow,\r\n  unfollow,\r\n  requestUsers\r\n})(UsersContainer)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './Header.module.css'\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <img\r\n        src='https://image.freepik.com/free-vector/vintage-monochrome-serious-russian-bear_225004-583.jpg'\r\n        alt=''\r\n      />\r\n      <div className={styles.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {props.login} - <button onClick={props.logout}>Logout</button>\r\n          </div>\r\n        ) : (\r\n          <NavLink to={'/login'}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\nexport default Header\r\n","import { stopSubmit } from \"redux-form\";\r\nimport { AuthAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET-USER-DATA';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (SET_USER_DATA): {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await AuthAPI.auth()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let { login, id, email } = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await AuthAPI.login(email, password, rememberMe)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', { _error: message }));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await AuthAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Header from './Header'\r\nimport { logout } from '../../redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { reduxForm } from 'redux-form'\r\nimport { createField, Input } from '../../common/FormsControls/FormsControls'\r\nimport { requiredField } from '../../utils/validators/validators'\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router'\r\nimport styles from '../../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {createField('Login', Input, 'login', [requiredField])}\r\n      {createField('Password', Input, 'password', [requiredField], {type: 'password'})}\r\n      {createField(null, Input, 'rememberMe', [], { type: 'checkbox' }, 'Remember me')}\r\n      {error && (\r\n        <div className={styles.formErrorWrapper}>\r\n          <span className={styles.formSummaryError}>{error}</span>\r\n        </div>\r\n      )}\r\n      <button>Login</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.login, formData.password, formData.rememberMe)\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'} />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)\r\n","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'SET-INITIALIZED';\r\n\r\nconst initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case (SET_INITIALIZED): {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initializedSuccess = () => ({ type: SET_INITIALIZED });\r\n\r\nexport const getInitialized = () => (dispatch) => {\r\n    dispatch(getAuthUserData()).then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\nexport default appReducer","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport authReducer from './auth-reducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport profileReducer from './profileReducer';\r\nimport usersReducer from './usersReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React, { Suspense } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { Route } from 'react-router-dom';\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainer from './components/Users/UsersContainer';\n//import ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { Component } from 'react';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router'\nimport { connect } from 'react-redux';\nimport { getInitialized } from './redux/app-reducer'\nimport Preloader from './common/Preloader/Preloader';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.getInitialized()\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        <div className=\"app-wrapper-content\">\n\n          <Suspense fallback={<Preloader />}>\n            <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\n            <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n          </Suspense>\n          <Route path=\"/users\" render={() => <UsersContainer />} />\n          <Route path=\"/login\" render={() => <Login />} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { getInitialized })\n)(App);\n\nconst FullApp = (props) => {\n  return <HashRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </HashRouter>\n}\n\nexport default FullApp;","import reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport FullApp from './App';\n\nReactDOM.render(<FullApp />, document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\r\nimport styles from './FormsControls.module.css'\r\nimport { Field } from 'redux-form'\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = ({ placeholder, component, name, validators, props = {}, text = '' }) => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                placeholder={placeholder}\r\n                component={component}\r\n                name={name}\r\n                validate={validators}\r\n                {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__11DPe\",\"error\":\"FormsControls_error__CV30H\",\"formErrorWrapper\":\"FormsControls_formErrorWrapper__2v5cf\",\"formSummaryError\":\"FormsControls_formSummaryError__wUp24\"};","export default __webpack_public_path__ + \"static/media/Spinner.a7a15b42.svg\";","import React from 'react';\r\nimport preloader from '../../assets/images/Spinner.svg'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img width='50px' height='50px' src={preloader} alt='' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1IP1r\",\"pageNumber\":\"Paginator_pageNumber__2-ib5\",\"selectedPage\":\"Paginator_selectedPage__3ZIg1\"};","export const requiredField = (value) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLength = (length) => (value) => {\r\n    if (value && value.length > length) return `Max length is ${length} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3-e-A\",\"loginBlock\":\"Header_loginBlock__3fNwI\"};","import { ProfileAPI, UsersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_USER_STATUS = 'SET-USER-STATUS';\r\nconst DELETE_POST = 'DELETE-POST';\r\n\r\nconst initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hello', likesCount: 12 },\r\n        { id: 2, message: 'How are you?', likesCount: 11 },\r\n        { id: 3, message: 'Its my first post', likesCount: 40 }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPost,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(item => item.id !== action.id)\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPost) => ({ type: ADD_POST, newPost })\r\nexport const deletePost = (id) => ({ type: DELETE_POST, id })\r\nconst setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nconst setUserStatus = (status) => ({ type: SET_USER_STATUS, status })\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await UsersAPI.getUser(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const response = await ProfileAPI.getStatus(userId)\r\n    dispatch(setUserStatus(response.data));\r\n}\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const response = await ProfileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}