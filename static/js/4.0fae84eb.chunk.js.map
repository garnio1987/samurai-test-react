{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsRedirect","state","isAuth","auth","DialogItem","props","path","id","className","styles","dialog","to","activeClassName","activeLink","name","Message","message","maxLength50","maxLength","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","Dialogs","dialogsPage","dialogElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","newMessage","sendMessage","newMessageText","compose","connect","dispatch","addMessageCreator","Component"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,WAAa,4BAA4B,SAAW,0BAA0B,QAAU,2B,wFCGvNC,EAA0B,SAACC,GAAD,MAAY,CACtCC,OAAQD,EAAME,KAAKD,S,mCCWRE,EAZI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,qBAAKC,UAAWC,IAAOC,OAAvB,SACE,cAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAOI,WAA3C,SACGR,EAAMS,UCHAC,EAJC,SAACV,GACf,OAAO,qBAAKG,UAAWC,IAAOO,QAAvB,SAAiCX,EAAMW,W,iCC4B1CC,EAAcC,YAAU,IAmBxBC,EAAsBC,YAAU,CACpCC,KAAM,yBADoBD,EAjBL,SAACf,GACtB,OACE,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXZ,KAAK,iBACLa,SAAU,CAACC,IAAeX,OAG9B,8BACE,kDAUOY,EA/CC,SAACxB,GACf,IAAIJ,EAAQI,EAAMyB,YAEdC,EAAiB9B,EAAM+B,QAAQC,KAAI,SAACC,GAAD,OACrC,cAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAMP,GAAI2B,EAAE3B,QAG9B4B,EAAmBlC,EAAMmC,SAASH,KAAI,SAACI,GAAD,OACxC,cAAC,EAAD,CAASrB,QAASqB,EAAErB,aAOtB,OACE,sBAAKR,UAAWC,IAAOuB,QAAvB,UACE,qBAAKxB,UAAWC,IAAO6B,aAAvB,SAAsCP,IACtC,qBAAKvB,UAAWC,IAAO2B,SAAvB,SAAkCD,IAClC,cAAChB,EAAD,CAAqBG,SARD,SAACiB,GACvBlC,EAAMmC,YAAYD,EAAWE,uBCAlBC,sBACbC,aAfoB,SAAC1C,GACrB,MAAO,CACL6B,YAAa7B,EAAM6B,gBAIE,SAACc,GACxB,MAAO,CACLJ,YAAa,SAACD,GACZK,EAASC,YAAkBN,UJPD,SAACO,GAS7B,OAFiCH,YAAQ3C,EAAR2C,EALP,SAACtC,GACvB,OAAKA,EAAMH,OACJ,cAAC4C,EAAD,eAAezC,IADI,cAAC,WAAD,CAAUM,GAAI,gBISjC+B,CAGbb","file":"static/js/4.0fae84eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__4ffiN\",\"dialogsItems\":\"Dialogs_dialogsItems__2vzWo\",\"dialog\":\"Dialogs_dialog__1hnk_\",\"activeLink\":\"Dialogs_activeLink__3IoDR\",\"messages\":\"Dialogs_messages__3fsDs\",\"message\":\"Dialogs_message__2Scg4\"};","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from \"react-router\"\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={'/login'} />\r\n        return <Component {...props} />\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react'\r\nimport styles from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id\r\n\r\n  return (\r\n    <div className={styles.dialog}>\r\n      <NavLink to={path} activeClassName={styles.activeLink}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem\r\n","import React from 'react'\r\nimport styles from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n  return <div className={styles.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport styles from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls'\r\nimport { maxLength, requiredField } from '../../utils/validators/validators'\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage\r\n\r\n  let dialogElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} />\r\n  ))\r\n\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} />\r\n  ))\r\n\r\n  const onAddNewMessage = (newMessage) => {\r\n    props.sendMessage(newMessage.newMessageText)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogsItems}>{dialogElements}</div>\r\n      <div className={styles.messages}>{messagesElements}</div>\r\n      <AddMessageReduxForm onSubmit={onAddNewMessage} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst maxLength50 = maxLength(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name='newMessageText'\r\n          validate={[requiredField, maxLength50]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({\r\n  form: 'dialogsAddMessageForm'\r\n})(AddMessageForm)\r\n\r\nexport default Dialogs\r\n","import { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { addMessageCreator } from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessage) => {\r\n      dispatch(addMessageCreator(newMessage))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}